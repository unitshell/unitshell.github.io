{:findings
 [{:filename "src-adm",
   :type :file,
   :col 0,
   :row 0,
   :message "file does not exist",
   :level :error,
   :langs ()}
  {:filename "src-app",
   :type :file,
   :col 0,
   :row 0,
   :message "file does not exist",
   :level :error,
   :langs ()}
  {:filename "src-srv",
   :type :file,
   :col 0,
   :row 0,
   :message "file does not exist",
   :level :error,
   :langs ()}],
 :config
 {:lint-as
  {compojure.core/let-routes clojure.core/let,
   cats.core/->>= clojure.core/->>,
   clojure.core.async/go-loop clojure.core/loop,
   reagent.core/with-let clojure.core/let,
   rewrite-clj.custom-zipper.core/defn-switchable clojure.core/defn,
   promesa.core/let clojure.core/let,
   cljs.core.async.macros/go-loop clojure.core/loop,
   clojure.test.check.generators/let clojure.core/let,
   vars/defcond clojure.core/def,
   cats.core/->= clojure.core/->,
   cljs.core.async/go-loop clojure.core/loop,
   compojure.core/defroutes clojure.core/def,
   schema.core/defschema clojure.core/def},
  :cfg-dir "/home/runner/work/mlib/mlib/.clj-kondo",
  :hooks
  {:analyze-call
   {clojure.core/def hooks.ug/def-body-sexpr,
    clojure.core/defn hooks.ug/defn-body-exprs,
    cljs.core/def hooks.ug/def-body-sexpr,
    cljs.core/defn hooks.ug/defn-body-exprs}},
  :output
  {:format :text,
   :summary true,
   :progress false,
   :include-files [],
   :exclude-files [],
   :linter-name false,
   :canonical-paths false,
   :analysis
   {:arglists true,
    :var-definitions {:meta true},
    :namespace-definitions {:meta [:no-doc :skip-wiki]}}},
  :skip-args [],
  :skip-comments true,
  :linters
  {:hook {:level :error},
   :docstring-leading-trailing-whitespace {:level :off},
   :bb.edn-cyclic-task-dependency {:level :error},
   :case-quoted-test {:level :warning},
   :datalog-syntax {:level :error},
   :redundant-do {:level :off},
   :plus-one {:level :off},
   :conflicting-fn-arity {:level :error},
   :redundant-fn-wrapper {:level :off},
   :type-mismatch {:level :error},
   :docstring-blank {:level :warning},
   :keyword-binding {:level :off},
   :protocol-method-varargs {:level :error},
   :format {:level :error},
   :deps.edn {:level :warning},
   :underscore-in-namespace {:level :warning},
   :clj-kondo-config {:level :warning},
   :condition-always-true {:level :off},
   :redundant-let {:level :warning},
   :misplaced-docstring {:level :warning},
   :discouraged-tag {:level :warning},
   :equals-true {:level :off},
   :consistent-alias {:level :warning, :aliases {}},
   :non-arg-vec-return-type-hint {:level :warning},
   :missing-test-assertion {:level :warning},
   :aliased-namespace-symbol {:level :off, :exclude #{}},
   :line-length {:level :warning, :max-line-length nil},
   :use {:level :warning},
   :unused-referred-var {:level :warning, :exclude {}},
   :equals-false {:level :off},
   :duplicate-set-key {:level :error},
   :duplicate-map-key {:level :error},
   :bb.edn-unexpected-key {:level :warning},
   :not-empty? {:level :warning},
   :file {:level :error},
   :def-fn {:level :off},
   :unknown-require-option {:level :warning},
   :missing-clause-in-try {:level :warning},
   :discouraged-namespace {:level :warning},
   :refer-all {:level :warning, :exclude #{}},
   :inline-def {:level :warning},
   :missing-body-in-when {:level :warning},
   :deprecated-namespace {:level :warning},
   :unresolved-symbol
   {:level :error,
    :exclude
    [(user/defproject)
     (clojure.test/are [thrown? thrown-with-msg?])
     (cljs.test/are [thrown? thrown-with-msg?])
     (clojure.test/is [thrown? thrown-with-msg?])
     (cljs.test/is [thrown? thrown-with-msg?])]},
   :cond-else {:level :warning},
   :unsorted-required-namespaces {:level :off},
   :missing-docstring {:level :off},
   :conflicting-alias {:level :error},
   :single-operand-comparison {:level :warning},
   :minus-one {:level :off},
   :bb.edn-task-missing-docstring {:level :off},
   :missing-else-branch {:level :warning},
   :loop-without-recur {:level :warning},
   :namespace-name-mismatch {:level :error},
   :unused-import {:level :warning},
   :discouraged-var {:level :warning},
   :shadowed-var {:level :off},
   :var-same-name-except-case {:level :warning},
   :unexpected-recur {:level :error},
   :self-requiring-namespace {:level :off},
   :deprecated-var {:level :warning},
   :earmuffed-var-not-dynamic {:level :warning},
   :unbound-destructuring-default {:level :warning},
   :dynamic-var-not-earmuffed {:level :off},
   :redundant-expression {:level :warning},
   :multiple-async-in-deftest {:level :warning},
   :case-duplicate-test {:level :error},
   :aliased-namespace-var-usage {:level :warning},
   :syntax {:level :error},
   :single-key-in {:level :off},
   :unused-value {:level :warning},
   :used-underscored-binding {:level :off},
   :redundant-call {:level :off},
   :unused-namespace
   {:level :warning, :exclude [], :simple-libspec true},
   :case-symbol-test {:level :off},
   :unused-alias {:level :off},
   :reduce-without-init {:level :off, :exclude []},
   :private-call {:level :error},
   :unresolved-var {:level :warning},
   :unsorted-imports {:level :off},
   :duplicate-field {:level :error},
   :not-a-function {:level :error, :skip-args []},
   :duplicate-require {:level :warning},
   :unused-private-var {:level :warning},
   :docstring-no-summary {:level :off},
   :unresolved-namespace {:level :warning, :exclude []},
   :uninitialized-var {:level :warning},
   :main-without-gen-class {:level :off},
   :invalid-arity {:level :error, :skip-args []},
   :single-logical-operand {:level :off},
   :warn-on-reflection {:level :off, :warn-only-on-interop true},
   :bb.edn-undefined-task {:level :error},
   :missing-map-value {:level :error},
   :unreachable-code {:level :warning},
   :refer {:level :off},
   :redefined-var {:level :warning},
   :unused-binding
   {:level :warning,
    :exclude-destructured-keys-in-fn-args false,
    :exclude-destructured-as false,
    :exclude-defmulti-args false}},
  :cljc {:features [:cljs]}},
 :summary
 {:error 3,
  :warning 0,
  :info 0,
  :type :summary,
  :duration 3,
  :files 0},
 :analysis
 {:namespace-definitions [],
  :namespace-usages [],
  :var-definitions [],
  :var-usages []}}
